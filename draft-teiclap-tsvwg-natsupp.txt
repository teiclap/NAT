draft-teiclap-tsvwg-natsupp.txt

- Scope of the proposal
The scope of the proposal is the use of NAT in networks where SCTP clients and server are instantiated
with neither restrictions on the level of NAT hyerarchically or horizontally, nor on the adoption of multihoming.
In the scoped scenarios, NAT can be used for hiding SCTP clients, servers and for implementation of Load Balancing
in the sense that multiple SCTP servers are hidden and the choice of the one serving the client is decided
by the NAT function implementing Load Balancing at Association Establishment time and kept for the Association Lifetime.

An example of such a network is depicted below:

                          +-------+
[SCTP client C1]----------+       |
[SCTP client C2]----------+  NAT  +-----+
[SCTP client C3]----------+       |     |
                          +-------+     |    +------+
                                        +----+  NAT |
[SCTP server S1]-----------------------------+  LB  +------- IP A
[SCTP server S2]-----------------------------+      |
                          +-------+  +-------+      |
[SCTP client C4]----------+       |  |       +------+
[SCTP client C5]----------+  NAT  +--+
                     +----+       |
+--------------+     |    +-------+
|              +-----+
|SCTP server S3]          +-------+     
|              +----------+       |
|--------------+          |  NAT  +------------------------- IP B
[SCTP client C7]----------+       |
[SCTP server S4]----------+       |
                          +-------+


In the example above clients C1, C2, C3, C4, C5 and servers S1 and S2 share the same external IP A,
client C7 exploits the external IP B and server S3 is multihomed and exploits IP A and IP B.
Server S4 exploits IP B as well.

Server S1 and S2 are seen as a single, distributed SCTP Endpoint, NAT LB does inspect Association
requests and assignes the serving SCTP host based on a Load Sharing algorithm.

It's important to state that unless being part of a SCTP Distributed Endpoint, the port number used
when defining the SCTP Ednpoints of a SCTP server behind a NAT need to be unique.

- What is kept from the draft
Similar to what described in the current draft-ietf-tsvwg-natsupp there's the need of a cooperation
between SCTP Hosts and NAT device in order to allow Association setup and traffic exchange.
The NAT devices will take a lookup table that is meant to keep the state of the Association
limited to what is needed in NAT.
NAT has a functions for searching the lookup table and take a decision based on the results.

The SCTP Endpoint takes the responsibility to take decisions based on the feedbacks received
from the network in order to setup the Association.

An Association is established towards the primary peer interface first, then the other paths
that belong tp a multihomed association are added by means of ASCONF messages.

The following extensions are taken

Extended ERROR Chunk

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |   Type = 9    | Reserved  |M|T|           Length              |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   \                                                               \
   /                   zero or more Error Causes                   /
   \                                                               \
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   The ERROR chunk defined in [RFC4960] is extended to add the new 'M
   bit'.  The M bit indicates to the receiver of the ERROR chunk that
   the chunk was not generated by the peer SCTP endpoint, but instead by
   a middle box.



- What is changed from the draft
The objective of this proposal is to simplify the current draft and reduce the computational
effort at the intermediate nodes, this is accomplished by reducing the need for chunk parsing at the NAT
and avoiding direct communication between NAT and the SCTP Hosts.




- What are the benefits and the simplifications




Hi Claudio,

I still think there are some unclarities in the proposal. However, I think it is
time to think of how you would introduce this proposal to the WG. Because that
is what is needed now. From my perspective I think it is important to make it
clear what is the same, what is changed and what properties that have so that it
shows that this proposal benefits and simpliciations and its minor impact. So I
think you should try to write up the draft of an email that can explain your
changes.

But lets look at those things I reacted to.

"Signaling between NAT and the SCTP hosts is implicit, as NAT can drop
messages when it cannot forward them, and SCTP hosts get that information
by means of rtx exceeds (an rtx exceeds is the given by t3-timer times the 
number of retransmission allowed)." 

I think you should be clearer that there are optional process per (7.). 


The next issue is related to the assignLocalDestinationIP function. So I think
the base proposal here can't support multiple SCTP assicoation to share the same
path on the NAT external side (external side 5-tuple). I would not include this
unless you intended to define an optional extension that uses the VTAG to
seperate them. So I think this function should not be needed. For an incoming
packet it will be forward to the internal host that has an association with a
path with that 5-tuple, or? If one add VTAG to the NAT one could support
multiple SCTP associations and internal host. 

Can the NAT support of VTAG be completely NAT specific, i.e. no impact on the
endpoint? So that it is up to the NAT implementation if it want to process into
the INIT to find the VTAG? I would expect that putting the initial TAG into the
heartbeat would simplify the return routing for non-synchronized NATs. 

However, to my understanding if one have multiple clients behind the same set of
NATS contacting the same server, the worst case case without any VTAG support is
that the client ends up with client side single homing due to source port
collision and that different clients initiate at the same time their association
and managed to grabb the entry on different NATs. Is this something we can live
with and also let the client live with. There are a mitigation where an endpoint
could attempt to create a new SCTP association and see if that manages to get
more of the paths to work and migrate to that one. 

If describing the different scenarios you need to be a bit clearer on NAT setup,
what is known by the endpoint. To my understanding 
1) NAT on first endpoint, second endpoint have a public IP, it may or may not be
NATed but have a port forwarding rule for the server port on the external IP in
that case.

2) This is fairly clear if the server side is not NATed. However, if that side
would have port forwarding rules I think there are two cases, both NATs have
forwarding rules, or only one of them. Does the later change things? Are there
any case where the server side are there difference between having no NAT or
having port forwarding for the server port on all NATs? I think that is a
general case to consider is if the server needs multiple initial public IP
address and forwarding rules, or if they can bootstrap from a single one and how
much to discuss that. 

3) I think this is fairly clear on the client side. It can be somewhat expanded
on due to the question I had about if some egress fails due to collision what to
do about it from the client endpoint?

4) So this is a case of what I brough up for 2) The server side needs one public
IP address with port forwarding if NATed. So I think these cases are actually
dependent on not only scenario for the network topology and NAT but also what
SCTP Extensions that are in place. To me it appears that one need to consider
the combination of the following aspects.


1. Single/Multihoming of client
2. Single/Multihoming of server
3. Usage of ASCONF

The reason for bringing it up like this is to consider when the server need to
know all its external points of presence if NATed, and in which cases the client
needs to also known to achieve things. 


5. I know 3GPP created this case, but is it really existing elsewhere. In all
other cases I would have expected the association initiating party to use a
random source port to the peers server port. Not to attempt to connect from its
server ports. 


So to conclude, please think about the above if there are things you want to
clarify. However, I think what is needed is to start drafting a message to the
TSVWG that really presents the proposal in a logical way and contrast it to what
exists and what benefits it provides.
